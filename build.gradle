apply plugin: 'java'
apply plugin: 'maven'
apply plugin: 'eclipse'
apply plugin: 'idea'

repositories {
    mavenCentral()
}

<<<<<<< Updated upstream
configurations {
    // libraries we do not want to ship with the artifact
    provided
}

dependencies {
    compile 'org.antlr:ST4:4.0.8'

    testCompile 'junit:junit:4.11'
    testCompile 'org.mockito:mockito-all:1.9.5'
    testCompile 'com.google.code.findbugs:jsr305:3.0.0'

    provided 'com.google.auto.value:auto-value:1.0-rc1'
}

//Include provided for compilation
sourceSets.main.compileClasspath += configurations.provided

// optional: if using 'idea' plugin
idea {
    module {
        scopes.PROVIDED.plus += configurations.provided
    }
}

=======
configurations{
    // libraries we do not want to ship with the artifact
    provided
}

dependencies {
	compile 'org.antlr:ST4:4.0.8'

    testCompile 'junit:junit:4.11'
	testCompile 'org.mockito:mockito-all:1.9.5'
	testCompile 'com.google.code.findbugs:jsr305:3.0.0'

    provided 'com.google.auto.value:auto-value:1.0-rc1'
}

//Include provided for compilation
sourceSets.main.compileClasspath += configurations.provided

// optional: if using 'idea' plugin
idea {
    module{
        scopes.PROVIDED.plus += configurations.provided
    }
}

>>>>>>> Stashed changes
// optional: if using 'eclipse' plugin
eclipse {
    classpath {
        plusConfigurations += configurations.provided
    }
}

task sourcesJar(type: Jar, dependsOn: classes) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

task stDebug(type: JavaExec) {
    main = "net.bugabinga.annotation.bean.template.STDebugGUI"
    classpath = sourceSets.main.runtimeClasspath
}

task wrapper(type: Wrapper) {
    gradleVersion = '2.0'
}

artifacts {
    archives sourcesJar
    archives javadocJar
}
